March 21, 2020

        Agenda:
            JavaScriptExecutor
            WebTables

Agenda:
JavaScriptExecutor
WebTables
####################################################

JavaScriptExecutor - interface that allows to execute JavaScript code as part of our selenium script.

JavaScript - used for front-end development, and supported by every browser and website. If, something doesn't work in selenium, we can do it with JavaScriptExecutor. For example: click, scroll, text input.

Since JavascriptExecutor is an interface, we cannot create an object of it. Instead, we can cast webdriver object.

JavascriptExecutor js = (JavascriptExecutor) driver;

Then, we can use executeScript method to run js code.

###This method, performs text input.

js.executeScript("arguments[0].setAttribute('value', 'tomsmith')", webelement);

###THis method is used for click

js.executeScript("arguments[0].click()", webelement);

###This element returns page title as a string

js.executeScript("return document.title").toString();

###This function scrolls until webelement is visible

js.executeScript("arguments[0].scrollIntoView(true)", link);

#########################################

Web tables - used to store tabular data in HTML.

Structure of web table:

table
thead
tr
th
th
tbody
tr
td
td
tr
td
td
tfoot
tr
td

table - beginning of web table
thead - table header, use to specify column names
tbody - table body, main content
tr - table row
th - table header data
td - table data


use indexes, to get specific values.

//table[1]//tbody//tr[1]//td[2]
means:
find first table
get first row from table body
and get second cell from that row

//table[1]//td[text()='fbach@yahoo.com']//following-sibling::td/a[text()='delete']

//table[1]//td[text()='fbach@yahoo.com']/..//a[text()='delete']